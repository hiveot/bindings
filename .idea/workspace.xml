<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f552812e-8d31-4bd0-b549-1a2fc8161ca7" name="Changes" comment="Cleanup, commit missing files">
      <change afterPath="$PROJECT_DIR$/../hub/cmd/hubcli/pubsubcli/PubSubCommands.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/owserver/internal/HandleActionRequest.go" beforeDir="false" afterPath="$PROJECT_DIR$/owserver/internal/HandleActionRequest.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/owserver/internal/HandleConfigRequest.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/owserver/internal/OWServerBinding.go" beforeDir="false" afterPath="$PROJECT_DIR$/owserver/internal/OWServerBinding.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/owserver/internal/PublishNodeValues.go" beforeDir="false" afterPath="$PROJECT_DIR$/owserver/internal/PublishNodeValues.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/owserver/internal/eds/EdsAPI.go" beforeDir="false" afterPath="$PROJECT_DIR$/owserver/internal/eds/EdsAPI.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub.capnp/go/vocab/HiveVocabulary.capnp.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub.capnp/go/vocab/HiveVocabulary.capnp.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/cmd/hubcli/authn/AuthnCommands.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/cmd/hubcli/authncli/AuthnCommands.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/cmd/hubcli/authz/AuthzCommands.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/cmd/hubcli/authzcli/AuthzCommands.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/cmd/hubcli/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/cmd/hubcli/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/lib/listener/CreateClientConnection.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/lib/listener/CreateClientConnection.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/lib/thing/DataSchema.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/lib/thing/DataSchema.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/lib/thing/ThingValue.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/lib/thing/ThingValue.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/pkg/launcher/config/launcher.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/pkg/launcher/config/launcher.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/pkg/launcher/service/LauncherService.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/pkg/launcher/service/LauncherService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/pkg/pubsub/IPubSub.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/pkg/pubsub/IPubSub.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/pkg/pubsub/core/PubSubCore.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/pkg/pubsub/core/PubSubCore.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/pkg/pubsub/service/DevicePubSub.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/pkg/pubsub/service/DevicePubSub.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/pkg/pubsub/service/PubSubService.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/pkg/pubsub/service/PubSubService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/pkg/pubsub/service/UserPubSub.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/pkg/pubsub/service/UserPubSub.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../hub/pkg/resolver/service/ResolverService.go" beforeDir="false" afterPath="$PROJECT_DIR$/../hub/pkg/resolver/service/ResolverService.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///snap/go/10008" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2JqIBQvcKmtb1OuRTBTWYUAa9cO" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/henk/dev/hiveot/hub&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;go.autoimport&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/owserver" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test github.com/hiveot/hub/pkg/launcher">
    <configuration name="TestAction in github.com/hiveot/bindings/owserver/internal" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="bindings" />
      <working_directory value="$PROJECT_DIR$/owserver/internal" />
      <root_directory value="$PROJECT_DIR$/owserver" />
      <kind value="PACKAGE" />
      <package value="github.com/hiveot/bindings/owserver/internal" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestAction\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestPoll in github.com/hiveot/bindings/owserver/internal" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="bindings" />
      <working_directory value="$PROJECT_DIR$/owserver/internal" />
      <root_directory value="$PROJECT_DIR$/owserver" />
      <kind value="PACKAGE" />
      <package value="github.com/hiveot/bindings/owserver/internal" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestPoll\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestPollInvalidEDSAddress in github.com/hiveot/bindings/owserver/internal" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="bindings" />
      <working_directory value="$PROJECT_DIR$/owserver/internal" />
      <root_directory value="$PROJECT_DIR$/owserver" />
      <kind value="PACKAGE" />
      <package value="github.com/hiveot/bindings/owserver/internal" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestPollInvalidEDSAddress\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStartStop in github.com/hiveot/bindings/owserver/internal" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="bindings" />
      <working_directory value="$PROJECT_DIR$/owserver/internal" />
      <root_directory value="$PROJECT_DIR$/owserver" />
      <kind value="PACKAGE" />
      <package value="github.com/hiveot/bindings/owserver/internal" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestStartStop\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/hiveot/hub/pkg/launcher" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="hub" />
      <working_directory value="$PROJECT_DIR$/../hub/pkg/launcher" />
      <root_directory value="$PROJECT_DIR$/../hub" />
      <kind value="PACKAGE" />
      <package value="github.com/hiveot/hub/pkg/launcher" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test github.com/hiveot/hub/pkg/launcher" />
        <item itemvalue="Go Test.TestAction in github.com/hiveot/bindings/owserver/internal" />
        <item itemvalue="Go Test.TestPollInvalidEDSAddress in github.com/hiveot/bindings/owserver/internal" />
        <item itemvalue="Go Test.TestPoll in github.com/hiveot/bindings/owserver/internal" />
        <item itemvalue="Go Test.TestStartStop in github.com/hiveot/bindings/owserver/internal" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Tweaks to make writing bindings easier&#10;Cleanup and bug fixes" />
    <MESSAGE value="Initial  owserver 1-wire binding" />
    <MESSAGE value="Cleanup, commit missing files" />
    <option name="LAST_COMMIT_MESSAGE" value="Cleanup, commit missing files" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/bindings$go_test_github_com_hiveot_bindings_owserver_internal.out" NAME="go test github.com/hiveot/bindings/owserver/internal Coverage Results" MODIFIED="1673231432449" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/bindings$TestAction_in_github_com_hiveot_bindings_owserver_internal.out" NAME="TestAction in github.com/hiveot/bindings/owserver/internal Coverage Results" MODIFIED="1673202344558" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/bindings$go_test_github_com_hiveot_bindings_owserver_internal_eds.out" NAME="go test github.com/hiveot/bindings/owserver/internal/eds Coverage Results" MODIFIED="1673205592844" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/bindings$TestParseNodeFile_in_github_com_hiveot_bindings_owserver_internal_eds.out" NAME="TestParseNodeFile in github.com/hiveot/bindings/owserver/internal/eds Coverage Results" MODIFIED="1673205543275" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/bindings$go_test_github_com_hiveot_hub_pkg_directory.out" NAME="go test github.com/hiveot/hub/pkg/directory Coverage Results" MODIFIED="1673156131669" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>